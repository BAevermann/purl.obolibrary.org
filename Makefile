# OBO Purls Makefile
# 2015-11-06
# James A. Overton <james@overton.ca>
#
# This file contains code for working with
# Open Biomedical Ontoloiges (OBO)
# Persistent Uniform Resource Locators (PURLs).
#
# Required software:
#
# - [GNU Make](http://www.gnu.org/software/make/)
# - [Python 3](https://www.python.org/downloads/)
# - [PyYAML](http://pyyaml.org/wiki/PyYAML)
# - [xmlstarlet](http://xmlstar.sourceforge.net) for migration from OCLC


### Configuration

# Run operations on these ontologies.
ONTOLOGY_IDS := bfo iao obi

# Default goal: Generate an .htaccess file for each id in ONTOLOGY_IDS.
all: $(foreach o,$(ONTOLOGY_IDS),obo/$o/.htaccess)

# Use awk with tabs
AWK := awk -F "	" -v "OFS=	"

# Do not automatically delete intermediate files.
.SECONDARY:

# These goals do not correspond to files.
.PHONY: all fetch-all migrate-all


### Generate Apache Config
#
# Convert the YAML configuration files
# to Apache .htaccess files with RedirectMatch directives.
obo/%/.htaccess: config/%.yml
	mkdir -p obo/$*
	echo '# DO NOT EDIT THIS FILE!' > $@
	echo '# Automatically generated from $< on' $$(date) >> $@
	echo '' >> $@
	./translate.py < $< >> $@


### Fetch from OCLC
#
# Fetch records from OCLC in XML format.
migrate:
	mkdir -p $@

OCLC_XML = https://purl.org/admin/purl/?target=&seealso=&maintainers=&explicitmaintainers=&tombstone=false&p_id=

# Fetch first 100 PURLs for a given path from OCLC in XML format.
migrate/%.xml: migrate
	sleep 5
	curl -o $@ "$(OCLC_XML)/obo/$*/*"

# Fetch XML for all ontologies in the ONTOLOGY_IDS list.
fetch-all: $(foreach o,$(ONTOLOGY_IDS),migrate/$o.yml)


### Migrate Configuration from OCLC
#
# Translated OCLC XML files into YAML files.
# This should be a one-time migration.
# WARN: Don't overwrite newer configuration files!
config:
	mkdir -p $@

# Use xmlstarlet to convert XML to YAML format,
# then tweak the results with sed.
# Do not overwrite existing config file.
config/%.yml: migrate/%.xml config
	@test -s $@ && (echo 'Refusing to overwrite $@'; exit 1) || exit 0
	echo '# PURL configuration for "$*"' > $@
	echo '' >> $@
	echo 'entries:' >> $@
	xmlstarlet sel \
	--template \
	--match '//purl' \
	--output '- type: ' --value-of 'type' \
	--output ' ' --value-of 'id' --nl \
	--output '  replacement: '   --value-of 'target/url' --nl \
	--nl \
	$< \
	| sed 's/^- type: 302 /- exact: /' \
	| sed 's/^- type: partial /- prefix: /' \
	| sed 's!: /obo/$*!: !' \
	>> $@

# Migrate XML to YAML for all ontologies in the ONTOLOGY_IDS list.
migrate-all: $(foreach o,$(ONTOLOGY_IDS),config/$o.yml)
